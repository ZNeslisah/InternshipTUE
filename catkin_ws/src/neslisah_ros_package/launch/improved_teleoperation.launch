<?xml version="1.0"?>

<launch>

    <arg name="robot_name" default="myturtlebot"/>

    <!-- Launch Gazebo Stage 1 Environment -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_stage_4.world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>  

    <!-- Launch gazebo mocap -->
    <arg name="mocap_rate" default="50" />
    <include file="$(find gazebo_mocap)/launch/gazebo_mocap.launch">
        <arg name="mocap_rate" value="$(arg mocap_rate)"/>
    </include>

	<!-- Occupancy grid map file -->
    <arg name="map_file" default="$(find perception_package)/maps/robot_ogm_temp.yaml"/>
    <arg name="map_topic" default="$(arg robot_name)/map"/>

	
	<!-- Launch the map_server node -->
	<node pkg="map_server" type="map_server" name="map_server" args="$(arg map_file)">
        <remap from="map" to="$(arg map_topic)"/>
        <remap from="map_metadata" to="$(arg map_topic)_metadata"/>
        <param name="frame_id" value="$(arg robot_name)/map"/>
    </node>

    <!-- Launch rviz for visualizing OGM -->
    <arg name='fixed_frame' default="world"/>
    <arg name="scan_topic" default="$(arg robot_name)/scan"/> 
    <arg name="pose_topic" default="mocap/$(arg robot_name)/pose"/>
    <arg name="rviz_file" default="$(find occupancy_grid_mapping)/rviz/ogm_robot.rviz"/>

	<node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(arg rviz_file) -f $(arg fixed_frame)">
        <remap from="scan" to="$(arg scan_topic)"/>
        <remap from="/mocap/robot_name/pose" to="$(arg pose_topic)"/>
    </node>

	<!-- Launch global planner -->
	<node pkg="global_planner" type="planner" name="planner" ns="$(arg robot_name)">
		<rosparam command="load" file="$(find robot_navigation)/config/costmap_params.yaml" ns="costmap" />
		<rosparam command="load" file="$(find robot_navigation)/config/planner_params.yaml" ns="planner" />
	</node>

	<!-- Remap the RViz 2D Nav Goal button topic to specify the planner goal -->
	<remap from="/move_base_simple/goal" to="/planner/goal"/>


    <!-- Launch TurtleBot3 robot-->
    <arg name="name" default="$(optenv TURTLEBOT3_NAME turtlebot)" />
    <arg name="x" default="-2.0"/>
    <arg name="y" default="0.0"/>
    <arg name="yaw" default="0.0"/>
    <include file="$(find turtlebot3_simulate)/launch/turtlebot3.launch">
        <arg name="name" value="$(arg name)"/>
        <arg name="x" value="$(arg x)"/>
        <arg name="y" value="$(arg y)"/>
        <arg name="yaw" value="$(arg yaw)"/>
    </include>


   <!--Launch TurtleBot3 keyboard teleoperation OPEN YOUR OWN LAUNCH FÄ°LE AND YOUR LAUNCH FILE WILL CALL FOR YOUR PYTHON FILE-->
    <include file="$(find control_package)/launch/neslisah_teleop_key.launch" ns="$(arg name)">
        <arg name="cmd_vel" value="cmd_vel_key"/>
        <arg name="scan_topic" value="scan"/>

    </include>
    
	<!-- Set TurtleBot model -->
    <arg name="model" default="$(find turtlebot3_simulate)/urdf/turtlebot3_waffle_pi.urdf.xacro" />
    <param name="robot_description" command="/opt/ros/noetic/bin/xacro --inorder $(arg model)" />

	<!-- Set TurtleBot model-->
    <node pkg="control_package" type="check_obstacle.py" name="check_obstacle" output="screen"/>  

    <node pkg="control_package" type="path_predictor.py" name="path_predictor" output="screen"/>  


</launch>