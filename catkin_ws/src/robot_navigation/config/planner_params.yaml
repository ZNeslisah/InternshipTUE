use_dijkstra: false # (bool, default: true) If true, use dijkstra's algorithm. Otherwise, A*.
use_quadratic: true # (bool, default: true) If true, use the quadratic approximation of the potential. Otherwise, use a simpler calculation.
use_grid_path: true # (bool, default: false) If true, create a path that follows the grid boundaries. Otherwise, use a gradient descent method.
old_navfn_behavior: false # (bool, default: false)  If for some reason, you want global_planner to exactly mirror the behavior of navfn, set this to true (and use the defaults for the other boolean parameters)

lethal_cost: 250 # (int, default: 253) Lethal Cost
neutral_cost: 50 # (int, default: 50) Neutral Cost
cost_factor: 3.0 # (double, default: 3.0) Factor to multiply each cost from costmap by
allow_unknown: false #(bool, default: true) Specifies whether or not to allow the planner to create plans that traverse unknown space.
default_tolerance: 0.0 # (double, default: 0.0) A tolerance on the goal point for the planner. The planner will attempt to create a plan that is as close to the specified goal as possible but no further than default_tolerance away.

orientation_mode: 0 #(int, default: 0) How to set the orientation of each point (None=0, Forward=1, Interpolate=2, ForwardThenInterpolate=3, Backward=4, Leftward=5, Rightward=6)
orientation_window_size: 1 # (int, default: 1) What window to use to determine the orientation based on the position derivative specified by the orientation mode

publish_potential: true # (bool, default: True) Publish Potential Costmap
visualize_potential: false  # (bool, default: false) Specifies whether or not to visualize the potential area computed via a PointCloud2.

outline_map: true # (bool, default: true) Outlines the global costmap with lethal obstacles. For the usage of a non static (rolling window) global costmap this needs to be set to false
